{"version":3,"sources":["components/searchBar.js","components/cityCard.js","components/cityList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","term","event","preventDefault","this","onSubmit","className","style","marginTop","e","onFormSubmit","type","placeholder","value","onChange","setState","target","React","Component","CityCard","city","console","log","class","name","slots","map","item","vaccine","fee","min_age_limit","available_capacity","CityList","cityLink","citys","App","onSearchSubmit","a","axios","get","baseURL","params","pincode","date","getDate","response","data","sessions","today","Date","String","padStart","getMonth","getFullYear","text","length","district_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f245631.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      term: \"\",\r\n    };\r\n  }\r\n\r\n  onFormSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\" style={{marginTop: 30  }}> \r\n        <form onSubmit={(e) => this.onFormSubmit(e)} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <div className=\"ui black ribbon label\">Search pincode</div>\r\n\r\n            <div className=\"ui input focus\" style={{ marginTop: \"10px\" }}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={this.state.term}\r\n                onChange={(e) => this.setState({ term: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","const CityCard = ({ city }) => {\r\n  console.log(city);\r\n  return (\r\n    <div class=\"ui card raised\">\r\n      <div class=\"content\">\r\n        <div class=\"header\">\r\n          <i class=\"hospital outline icon\"></i> {city.name}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"ui content \">\r\n        <div class=\"item\">\r\n          <h4 class=\"ui left floated \">\r\n            <i class=\"clock outline icon\"></i> Available Slots :\r\n          </h4>\r\n          <br/>\r\n          <div class=\"ui divider\"></div>\r\n          \r\n          <div class=\" ui one column centered  grid\">\r\n            {city.slots.map((item) => {\r\n              return (\r\n                <div class=\"column\">\r\n                  <div class=\"ui label\">{item}</div>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"content\">\r\n        <div class=\"ui small feed\">\r\n          <div class=\"event\">\r\n            <div class=\"content\">\r\n              <div class=\"summary\">\r\n                <div>\r\n                  <i class=\"stethoscope icon\"></i>&nbsp;&nbsp;&nbsp;\r\n                  <b>vaccine name : </b>\r\n                  {city.vaccine}\r\n                </div>\r\n                <div>\r\n                  <i class=\"money bill alternate icon\"></i>&nbsp;&nbsp;&nbsp;\r\n                  <b>vaccine fee : </b>\r\n                  {city.fee}\r\n                </div>\r\n                <div>\r\n                  <i class=\"calendar check outline icon\"></i>&nbsp;&nbsp;&nbsp;\r\n                  <b>min_age_limit : </b>\r\n                  {city.min_age_limit}\r\n                </div>\r\n                <div>\r\n                  <i class=\"shield alternate icon\"></i>&nbsp;&nbsp;&nbsp;\r\n                  <b>available capacity : </b>\r\n                  {city.available_capacity}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityCard;\r\n","import CityCard from './cityCard';\r\n\r\nconst CityList = ({ citys }) => {\r\n  \r\n  const cityLink = citys.map( (item) =>{\r\n    return <div class=\"column\"> <CityCard city={item} /> </div>\r\n  });\r\n\r\n  return(\r\n    <div class=\"ui stackable three column grid\">\r\n     {cityLink}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityList;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./components/searchBar\";\r\nimport CityList from \"./components/cityList\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.baseURL =\r\n      \"https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin\";\r\n    this.state = {\r\n      citys: []\r\n    };\r\n  }\r\n\r\n  getDate(){\r\n      let today = new Date();\r\n      let dd = String(today.getDate()).padStart(2, '0');\r\n      let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n      let yyyy = today.getFullYear();\r\n      return dd + '-' + mm + '-' + yyyy;\r\n  }\r\n\r\n  onSearchSubmit = async (term) => {\r\n    const response = await axios.get(this.baseURL, {\r\n      params: {\r\n        pincode:term,\r\n        date: this.getDate()\r\n      },\r\n    });\r\n\r\n    console.log(response.data.sessions);\r\n\r\n    this.setState({ citys: response.data.sessions });\r\n  };\r\n\r\n  render() {\r\n    let text = \"\"\r\n    if( this.state.citys.length === 0){\r\n      text = \"Total hospitals found 0\"\r\n    }\r\n    else{\r\n      text = \"Total hospitals found in \"  + this.state.citys[0].district_name +\" are \" + String(this.state.citys.length)\r\n\r\n    }\r\n    return (\r\n      <div className=\"ui padded container\">\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <h2>{text}</h2>\r\n        <br/>\r\n        <br/>\r\n        <CityList citys={this.state.citys} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}